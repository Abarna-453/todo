1. Create the Roles Table:
CREATE TABLE Roles (
    role_id VARCHAR2(36) PRIMARY KEY,
    role_name VARCHAR2(50) NOT NULL
);

2. Insert Values into the Roles Table:
INSERT INTO Roles (role_id, role_name) VALUES ('1', 'Employee');
INSERT INTO Roles (role_id, role_name) VALUES ('2', 'TaxAuditor');
INSERT INTO Roles (role_id, role_name) VALUES ('3', 'System Admin');

3. Update a Value in the Roles Table:
Suppose you want to update the role name for role_id = '2' from 'TaxAuditor' to 'Tax Auditor':
UPDATE Roles
SET role_name = 'Tax Auditor'
WHERE role_id = '2';

4. Delete a Value from the Roles Table:
Suppose you want to delete the System Admin role:
DELETE FROM Roles
WHERE role_id = '3';

5. Query the Roles Table:
Retrieve all the roles in the table:
SELECT * FROM Roles;

1. Create the User Table:
sql
Copy code
CREATE TABLE Users (
    uid VARCHAR2(36) DEFAULT SYS_GUID() PRIMARY KEY, -- Autogenerate UUID
    role_id VARCHAR2(36) REFERENCES Roles(role_id),  -- Foreign key
    name VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL,
    password VARCHAR2(100) NOT NULL,
    phone_no NUMBER(15) UNIQUE,
    pancard_no NUMBER(10) UNIQUE
);
2. Create the AnnualTaxFilingDetails Table:
sql
Copy code
CREATE TABLE AnnualTaxFilingDetails (
    annualfiling_id VARCHAR2(36) PRIMARY KEY, -- UUID
    uid VARCHAR2(36) REFERENCES Users(uid),   -- Foreign key
    total_deduction NUMBER(19, 2) NOT NULL,
    total_claims NUMBER(19, 2) NOT NULL,
    total_returns NUMBER(19, 2) NOT NULL,
    filing_date DATE NOT NULL,
    description VARCHAR2(255),
    year NUMBER(4) CHECK (year BETWEEN 1900 AND EXTRACT(YEAR FROM SYSDATE))
);
3. Insert Values into the User Table (excluding autogenerated UID):
sql
Copy code
INSERT INTO Users (role_id, name, email, password, phone_no, pancard_no) 
VALUES ('1', 'John Doe', 'john.doe@example.com', 'securePass123', 9876543210, 1234567890);

INSERT INTO Users (role_id, name, email, password, phone_no, pancard_no) 
VALUES ('2', 'Jane Smith', 'jane.smith@example.com', 'anotherPass456', 9123456789, 9876543210);
4. Insert Values into the AnnualTaxFilingDetails Table:
sql
Copy code
INSERT INTO AnnualTaxFilingDetails (annualfiling_id, uid, total_deduction, total_claims, total_returns, filing_date, description, year) 
VALUES ('1', (SELECT uid FROM Users WHERE email = 'john.doe@example.com'), 150000, 100000, 50000, SYSDATE, 'Filing for FY 2023-24', 2023);

INSERT INTO AnnualTaxFilingDetails (annualfiling_id, uid, total_deduction, total_claims, total_returns, filing_date, description, year) 
VALUES ('2', (SELECT uid FROM Users WHERE email = 'jane.smith@example.com'), 200000, 150000, 50000, SYSDATE, 'Filing for FY 2023-24', 2023);
5. Update a Value in the User Table:
Suppose you want to update John Doe's email:

sql
Copy code
UPDATE Users
SET email = 'john.doe_new@example.com'
WHERE name = 'John Doe';
6. Update a Value in the AnnualTaxFilingDetails Table:
Suppose you want to update the total_returns for Jane Smith:

sql
Copy code
UPDATE AnnualTaxFilingDetails
SET total_returns = 60000
WHERE uid = (SELECT uid FROM Users WHERE email = 'jane.smith@example.com');
7. Select Values from the User Table:
Retrieve all user details:

sql
Copy code
SELECT * FROM Users;
8. Select Values from the AnnualTaxFilingDetails Table:
Retrieve all tax filing details:

sql
Copy code
SELECT * FROM AnnualTaxFilingDetails;
9. Add Unique Constraint (if not already defined):
Add a unique constraint to the pancard_no column in the Users table:

sql
Copy code
ALTER TABLE Users
ADD CONSTRAINT unique_pancard UNIQUE (pancard_no);

1. Create the User Table:
sql
Copy code
CREATE TABLE Users (
    uid VARCHAR2(36) PRIMARY KEY,
    role_id VARCHAR2(36),
    name VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL,
    password VARCHAR2(100) NOT NULL,
    phone_no NUMBER(15) UNIQUE NOT NULL,
    pancard_no NUMBER(10) UNIQUE NOT NULL,
    FOREIGN KEY (role_id) REFERENCES Roles(role_id)
);
2. Create the AnnualTaxFilingDetails Table:
sql
Copy code
CREATE TABLE AnnualTaxFilingDetails (
    annualfiling_id VARCHAR2(36) PRIMARY KEY,
    uid VARCHAR2(36) NOT NULL,
    total_deduction NUMBER(19, 0) NOT NULL,
    total_claims NUMBER(19, 0) NOT NULL,
    total_returns NUMBER(19, 0) NOT NULL,
    filing_date DATE NOT NULL,
    description VARCHAR2(255),
    year NUMBER(4) NOT NULL,
    FOREIGN KEY (uid) REFERENCES Users(uid)
);
3. Insert Values into the User Table:
sql
Copy code
INSERT INTO Users (uid, role_id, name, email, password, phone_no, pancard_no)
VALUES ('UUID-1', '1', 'John Doe', 'john.doe@example.com', 'password123', 9876543210, 1234567890);

INSERT INTO Users (uid, role_id, name, email, password, phone_no, pancard_no)
VALUES ('UUID-2', '2', 'Jane Smith', 'jane.smith@example.com', 'password123', 8765432109, 2345678901);
4. Insert Values into the AnnualTaxFilingDetails Table:
sql
Copy code
INSERT INTO AnnualTaxFilingDetails (annualfiling_id, uid, total_deduction, total_claims, total_returns, filing_date, description, year)
VALUES ('UUID-1001', 'UUID-1', 150000, 200000, 50000, TO_DATE('2024-03-31', 'YYYY-MM-DD'), 'Filing for the financial year 2023-2024', 2024);

INSERT INTO AnnualTaxFilingDetails (annualfiling_id, uid, total_deduction, total_claims, total_returns, filing_date, description, year)
VALUES ('UUID-1002', 'UUID-2', 120000, 150000, 30000, TO_DATE('2024-03-31', 'YYYY-MM-DD'), 'Filing for the financial year 2023-2024', 2024);
5. Update a Value in the User Table:
Suppose you want to update the phone number for uid = 'UUID-1':

sql
Copy code
UPDATE Users
SET phone_no = 9123456789
WHERE uid = 'UUID-1';
6. Update a Value in the AnnualTaxFilingDetails Table:
Suppose you want to update the total_claims for annualfiling_id = 'UUID-1001':

sql
Copy code
UPDATE AnnualTaxFilingDetails
SET total_claims = 210000
WHERE annualfiling_id = 'UUID-1001';
7. Select All Users and Their Annual Tax Filing Details:
To retrieve all users along with their annual tax filing details:

sql
Copy code
SELECT u.uid, u.name, u.email, a.annualfiling_id, a.total_deduction, a.total_claims, a.total_returns, a.filing_date, a.year
FROM Users u
JOIN AnnualTaxFilingDetails a ON u.uid = a.uid;
8. Delete a Record from the AnnualTaxFilingDetails Table:
Suppose you want to delete a filing record with annualfiling_id = 'UUID-1002':

sql
Copy code
DELETE FROM AnnualTaxFilingDetails
WHERE annualfiling_id = 'UUID-1002';
9. Query Specific User by Email:
To retrieve a specific user by email:

sql
Copy code
SELECT * FROM Users
WHERE email = 'john.doe@example.com';


1. Create the Designation Table:
sql
Copy code
CREATE TABLE Designation (
    designation_id VARCHAR2(36) PRIMARY KEY,   -- UUID for designation_id
    d_name VARCHAR2(100) UNIQUE NOT NULL,      -- Unique and Not Null for d_name
    fixed_salary NUMBER(19, 2) NOT NULL        -- Not Null for fixed_salary
);
2. Insert Values into the Designation Table:
sql
Copy code
INSERT INTO Designation (designation_id, d_name, fixed_salary) 
VALUES ('1', 'Software Engineer', 600000);

INSERT INTO Designation (designation_id, d_name, fixed_salary) 
VALUES ('2', 'Project Manager', 1200000);

INSERT INTO Designation (designation_id, d_name, fixed_salary) 
VALUES ('3', 'HR Manager', 800000);
3. Update a Value in the Designation Table:
Suppose you want to update the fixed salary for the Project Manager designation:

sql
Copy code
UPDATE Designation
SET fixed_salary = 1300000
WHERE d_name = 'Project Manager';
4. Select Values from the Designation Table:
Retrieve all designation details:

sql
Copy code
SELECT * FROM Designation;
5. Add a Unique Constraint (if not already defined):
If the unique constraint for d_name is not already defined:

sql
Copy code
ALTER TABLE Designation
ADD CONSTRAINT unique_designation_name UNIQUE (d_name);

1. Create the InvestmentDetails Table:
sql
Copy code
CREATE TABLE InvestmentDetails (
    investid VARCHAR2(36) PRIMARY KEY,           -- UUID for investid
    empid VARCHAR2(36) REFERENCES Employee(empid), -- Foreign key to Employee table
    in_type NUMBER(19) NOT NULL,                -- Not Null for in_type
    in_amt NUMBER(19, 2) NOT NULL,              -- Not Null for in_amt
    date DATE NOT NULL                          -- Not Null for date
);
2. Insert Values into the InvestmentDetails Table:
sql
Copy code
INSERT INTO InvestmentDetails (investid, empid, in_type, in_amt, date) 
VALUES ('1', (SELECT empid FROM Employee WHERE empid = 'some-uuid-1'), 101, 50000.00, SYSDATE);

INSERT INTO InvestmentDetails (investid, empid, in_type, in_amt, date) 
VALUES ('2', (SELECT empid FROM Employee WHERE empid = 'some-uuid-2'), 102, 75000.50, SYSDATE);

INSERT INTO InvestmentDetails (investid, empid, in_type, in_amt, date) 
VALUES ('3', (SELECT empid FROM Employee WHERE empid = 'some-uuid-3'), 103, 100000.75, SYSDATE);
3. Update a Value in the InvestmentDetails Table:
Suppose you want to update the investment amount for a specific investid:

sql
Copy code
UPDATE InvestmentDetails
SET in_amt = 80000.00
WHERE investid = '2';
4. Select Values from the InvestmentDetails Table:
Retrieve all investment details:

sql
Copy code
SELECT * FROM InvestmentDetails;
5. Add a Unique Constraint (if needed):
If you want to add a unique constraint for a combination of fields, such as empid and in_type:

sql
Copy code
ALTER TABLE InvestmentDetails
ADD CONSTRAINT unique_emp_investment UNIQUE (empid, in_type);
